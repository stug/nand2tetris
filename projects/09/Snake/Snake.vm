function Snake.new 2
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 20
pop this 2
push constant 0
push constant 0
push this 2
call Square.new 3
pop local 0
push local 0
call Square.draw 1
pop temp 0
push local 0
call Queue.new 1
pop this 0
push constant 6
pop local 1
label WHILE_EXP0
push local 1
push constant 0
gt
not
if-goto WHILE_END0
push pointer 0
call Snake.getNewHead 1
pop local 0
push this 0
push local 0
call Queue.push 2
pop temp 0
push local 0
call Square.draw 1
pop temp 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Snake.move 2
push argument 0
pop pointer 0
push pointer 0
call Snake.getNewHead 1
pop local 0
push this 0
push local 0
call Queue.push 2
pop temp 0
push local 0
call Square.draw 1
pop temp 0
push this 0
call Queue.pop 1
pop local 1
push local 1
call Square.undraw 1
pop temp 0
push local 1
call Square.dispose 1
pop temp 0
push constant 0
return
function Snake.getNewHead 4
push argument 0
pop pointer 0
push this 0
call Queue.getTail 1
pop local 0
push local 0
call Square.getPosition 1
pop local 1
push constant 2
call Array.new 1
pop local 3
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 3
add
push constant 0
push local 1
add
pop pointer 1
push that 0
push this 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 3
add
push constant 1
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push this 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push local 3
add
push constant 0
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 3
add
push constant 1
push local 1
add
pop pointer 1
push that 0
push this 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push this 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push local 3
add
push constant 0
push local 1
add
pop pointer 1
push that 0
push this 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 3
add
push constant 1
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push this 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push local 3
add
push constant 0
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 3
add
push constant 1
push local 1
add
pop pointer 1
push that 0
push this 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push constant 0
push local 3
add
pop pointer 1
push that 0
push constant 1
push local 3
add
pop pointer 1
push that 0
push this 2
call Square.new 3
pop local 2
push local 2
return
function Snake.turnLeft 0
push argument 0
pop pointer 0
push this 1
push constant 1
sub
pop this 1
push this 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 4
add
pop this 1
label IF_FALSE0
push constant 0
return
function Snake.turnRight 0
push argument 0
pop pointer 0
push this 1
push constant 1
add
pop this 1
push this 1
push constant 3
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 4
sub
pop this 1
label IF_FALSE0
push constant 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push this 0
call Queue.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
